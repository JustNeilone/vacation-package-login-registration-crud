// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Helpers;

namespace WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191121145022_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "vasya@mail.ru",
                            FullName = "Вася",
                            IsDeleted = false,
                            PhoneNumber = "88005553535"
                        },
                        new
                        {
                            Id = 2,
                            Email = "peterthefirst@gmail.com",
                            FullName = "Петя",
                            IsDeleted = false,
                            PhoneNumber = "9922623447"
                        },
                        new
                        {
                            Id = 3,
                            Email = "galina177@yandex.ru",
                            FullName = "Галя",
                            IsDeleted = false,
                            PhoneNumber = "88005553535"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Manage",
                            LastName = "Ment",
                            PasswordHash = new byte[] { 80, 76, 251, 33, 238, 104, 54, 101, 45, 144, 58, 134, 7, 180, 118, 220, 60, 38, 98, 199, 147, 71, 206, 201, 215, 102, 7, 182, 20, 138, 48, 134, 41, 183, 218, 28, 190, 190, 142, 102, 139, 99, 25, 7, 144, 73, 153, 22, 102, 125, 137, 224, 25, 129, 94, 92, 226, 31, 130, 24, 24, 97, 126, 126 },
                            PasswordSalt = new byte[] { 233, 15, 44, 255, 113, 247, 163, 224, 153, 223, 156, 116, 1, 248, 196, 193, 140, 250, 16, 1, 99, 60, 245, 95, 24, 180, 252, 122, 186, 18, 14, 106, 78, 48, 179, 0, 245, 44, 206, 21, 94, 90, 174, 200, 245, 159, 201, 107, 63, 89, 86, 66, 219, 200, 244, 215, 183, 162, 42, 109, 10, 87, 108, 93, 93, 232, 198, 115, 193, 46, 177, 160, 142, 54, 137, 60, 108, 165, 156, 63, 210, 224, 111, 255, 123, 27, 156, 100, 240, 137, 22, 181, 246, 20, 166, 220, 126, 237, 93, 13, 240, 97, 107, 27, 68, 50, 146, 255, 36, 121, 118, 145, 153, 210, 217, 192, 230, 145, 178, 125, 4, 43, 161, 243, 187, 26, 56, 141 },
                            Username = "manager"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CompletedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("VacationPackageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("VacationPackageId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompletedDateTime = new DateTime(2019, 11, 21, 17, 50, 22, 62, DateTimeKind.Local).AddTicks(5296),
                            CreationDateTime = new DateTime(2019, 11, 21, 17, 50, 22, 60, DateTimeKind.Local).AddTicks(3420),
                            CustomerId = 1,
                            IsDeleted = false,
                            ManagerId = 1,
                            Price = 500,
                            VacationPackageId = 1
                        },
                        new
                        {
                            Id = 2,
                            CompletedDateTime = new DateTime(2019, 11, 21, 17, 50, 22, 62, DateTimeKind.Local).AddTicks(6389),
                            CreationDateTime = new DateTime(2019, 11, 21, 17, 50, 22, 62, DateTimeKind.Local).AddTicks(6339),
                            CustomerId = 2,
                            IsDeleted = false,
                            ManagerId = 1,
                            Price = 600,
                            VacationPackageId = 2
                        },
                        new
                        {
                            Id = 3,
                            CompletedDateTime = new DateTime(2019, 11, 21, 17, 50, 22, 62, DateTimeKind.Local).AddTicks(6404),
                            CreationDateTime = new DateTime(2019, 11, 21, 17, 50, 22, 62, DateTimeKind.Local).AddTicks(6403),
                            CustomerId = 3,
                            IsDeleted = false,
                            ManagerId = 1,
                            Price = 700,
                            VacationPackageId = 3
                        });
                });

            modelBuilder.Entity("WebApi.Entities.VacationPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VacationPackages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Турция, отель 5 звезд",
                            Price = 20000
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Альпы, отель 5 звезд",
                            Price = 300000
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Сочи, отель 2 звезды",
                            Price = 1000
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Order", b =>
                {
                    b.HasOne("WebApi.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.Manager", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.VacationPackage", "VacationPackage")
                        .WithMany()
                        .HasForeignKey("VacationPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
